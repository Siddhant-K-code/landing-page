<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_detour__impl_8h">
<title>detour_impl.h File Reference</title>
<indexterm><primary>detour_impl.h</primary></indexterm>
<programlisting>#include &lt;detour/detour_api.h&gt;
#include &lt;detour/detour_impl_handle.h&gt;
</programlisting>Include dependency graph for detour_impl.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="detour__impl_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef struct detour_impl_type * <link linkend="_detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27">detour_impl</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>DETOUR_API <link linkend="_detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27">detour_impl</link> <link linkend="_detour__impl_8h_1afa470a63d48af285c6f5fd14abab95b9">detour_impl_create</link> (void)</para>
</listitem>
            <listitem><para>DETOUR_API int <link linkend="_detour__impl_8h_1a8ef406f31f59a7a1a07c82499a88a6cb">detour_impl_load</link> (<link linkend="_detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27">detour_impl</link> impl, const char *path, const char *name)</para>
</listitem>
            <listitem><para>DETOUR_API <link linkend="_detour__impl__handle_8h_1af561155897833a2ccb83169ed78de0a3">detour_impl_handle</link> <link linkend="_detour__impl_8h_1aec39d9bce79bd6cb2fb3dfa092473401">detour_impl_install</link> (<link linkend="_detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27">detour_impl</link> impl, void(**target)(void), void(*hook)(void))</para>
</listitem>
            <listitem><para>DETOUR_API int <link linkend="_detour__impl_8h_1a2d7f976fc35ddb443ff9e3e34ebf81ef">detour_impl_uninstall</link> (<link linkend="_detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27">detour_impl</link> impl, <link linkend="_detour__impl__handle_8h_1af561155897833a2ccb83169ed78de0a3">detour_impl_handle</link> handle)</para>
</listitem>
            <listitem><para>DETOUR_API int <link linkend="_detour__impl_8h_1ae3a54c63c40319f5609b0d5fa4168dba">detour_impl_unload</link> (<link linkend="_detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27">detour_impl</link> impl)</para>
</listitem>
            <listitem><para>DETOUR_API int <link linkend="_detour__impl_8h_1aa2fa10d7be12a9dbc32353c16593f442">detour_impl_destroy</link> (<link linkend="_detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27">detour_impl</link> impl)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27"/>    <section>
    <title>detour_impl</title>
<indexterm><primary>detour_impl</primary><secondary>detour_impl.h</secondary></indexterm>
<indexterm><primary>detour_impl.h</primary><secondary>detour_impl</secondary></indexterm>
<para><computeroutput>typedef struct detour_impl_type* <link linkend="_detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27">detour_impl</link></computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_detour__impl_8h_1afa470a63d48af285c6f5fd14abab95b9"/>    <section>
    <title>detour_impl_create()</title>
<indexterm><primary>detour_impl_create</primary><secondary>detour_impl.h</secondary></indexterm>
<indexterm><primary>detour_impl.h</primary><secondary>detour_impl_create</secondary></indexterm>
<para><computeroutput>DETOUR_API <link linkend="_detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27">detour_impl</link> detour_impl_create (void )</computeroutput></para><para>

<para>Create detour implementation. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Returns pointer to detour implementation correct creation, null otherwise </para>
</formalpara>
</para>
    </section><anchor xml:id="_detour__impl_8h_1a8ef406f31f59a7a1a07c82499a88a6cb"/>    <section>
    <title>detour_impl_load()</title>
<indexterm><primary>detour_impl_load</primary><secondary>detour_impl.h</secondary></indexterm>
<indexterm><primary>detour_impl.h</primary><secondary>detour_impl_load</secondary></indexterm>
<para><computeroutput>DETOUR_API int detour_impl_load (<link linkend="_detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27">detour_impl</link> impl, const char * path, const char * name)</computeroutput></para><para>

<para>Load detour implementation @impl. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>impl</entry>
                                <entry>
<para>Pointer to the detour implementation to be loaded</para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>path</entry>
                                <entry>
<para>Path where dependency is located</para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>name</entry>
                                <entry>
<para>Dependency name to be injected</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Returns zero on correct loading, distinct from zero otherwise </para>
</formalpara>
</para>
    </section><anchor xml:id="_detour__impl_8h_1aec39d9bce79bd6cb2fb3dfa092473401"/>    <section>
    <title>detour_impl_install()</title>
<indexterm><primary>detour_impl_install</primary><secondary>detour_impl.h</secondary></indexterm>
<indexterm><primary>detour_impl.h</primary><secondary>detour_impl_install</secondary></indexterm>
<para><computeroutput>DETOUR_API <link linkend="_detour__impl__handle_8h_1af561155897833a2ccb83169ed78de0a3">detour_impl_handle</link> detour_impl_install (<link linkend="_detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27">detour_impl</link> impl, void(**)(void) target, void(*)(void) hook)</computeroutput></para><para>

<para>Install detour implementation. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>impl</entry>
                                <entry>
<para>Pointer to the detour hook implementation</para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>target</entry>
                                <entry>
<para>Pointer to the function to be intercepted</para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>hook</entry>
                                <entry>
<para>Function will be called instead of target</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Return pointer to the detour handle on success, null otherwise </para>
</formalpara>
</para>
    </section><anchor xml:id="_detour__impl_8h_1a2d7f976fc35ddb443ff9e3e34ebf81ef"/>    <section>
    <title>detour_impl_uninstall()</title>
<indexterm><primary>detour_impl_uninstall</primary><secondary>detour_impl.h</secondary></indexterm>
<indexterm><primary>detour_impl.h</primary><secondary>detour_impl_uninstall</secondary></indexterm>
<para><computeroutput>DETOUR_API int detour_impl_uninstall (<link linkend="_detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27">detour_impl</link> impl, <link linkend="_detour__impl__handle_8h_1af561155897833a2ccb83169ed78de0a3">detour_impl_handle</link> handle)</computeroutput></para><para>

<para>Uninstall detour implementation. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>impl</entry>
                                <entry>
<para>Pointer to the detour hook implementation</para>
</entry>
                            </row>
                            <row>
                                <entry>in                                </entry>                                <entry>handle</entry>
                                <entry>
<para>Pointer to the detour hook handle</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Return zero on success, different from zero otherwise </para>
</formalpara>
</para>
    </section><anchor xml:id="_detour__impl_8h_1ae3a54c63c40319f5609b0d5fa4168dba"/>    <section>
    <title>detour_impl_unload()</title>
<indexterm><primary>detour_impl_unload</primary><secondary>detour_impl.h</secondary></indexterm>
<indexterm><primary>detour_impl.h</primary><secondary>detour_impl_unload</secondary></indexterm>
<para><computeroutput>DETOUR_API int detour_impl_unload (<link linkend="_detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27">detour_impl</link> impl)</computeroutput></para><para>

<para>Unload detour implementation @impl. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>impl</entry>
                                <entry>
<para>Pointer to the detour implementation to be unloaded</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Returns zero on correct unloading, distinct from zero otherwise </para>
</formalpara>
</para>
    </section><anchor xml:id="_detour__impl_8h_1aa2fa10d7be12a9dbc32353c16593f442"/>    <section>
    <title>detour_impl_destroy()</title>
<indexterm><primary>detour_impl_destroy</primary><secondary>detour_impl.h</secondary></indexterm>
<indexterm><primary>detour_impl.h</primary><secondary>detour_impl_destroy</secondary></indexterm>
<para><computeroutput>DETOUR_API int detour_impl_destroy (<link linkend="_detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27">detour_impl</link> impl)</computeroutput></para><para>

<para>Destroy detour implementation. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>in                                </entry>                                <entry>impl</entry>
                                <entry>
<para>Pointer to the detour implementation to be destroyed</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Returns zero on correct destruction, distinct from zero otherwise </para>
</formalpara>
</para>
</section>
</section>
</section>
