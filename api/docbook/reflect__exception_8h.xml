<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_reflect__exception_8h">
<title>reflect_exception.h File Reference</title>
<indexterm><primary>reflect_exception.h</primary></indexterm>
<programlisting>#include &lt;reflect/reflect_api.h&gt;
</programlisting>Include dependency graph for reflect_exception.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="reflect__exception_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef struct exception_type * <link linkend="_reflect__exception_8h_1abed3148acaa207134261748c1eb175a7">exception</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>REFLECT_API <link linkend="_reflect__exception_8h_1abed3148acaa207134261748c1eb175a7">exception</link> <link linkend="_reflect__exception_8h_1a07cdd4a20290dcc70a0a20fd67ecc8f2">exception_create</link> (const char *message, const char *label, int code, const char *stacktrace)</para>
</listitem>
            <listitem><para>const REFLECT_API char * <link linkend="_reflect__exception_8h_1ab9d4f0dc5fcee6e79a44b4613db00e2c">exception_message</link> (<link linkend="_reflect__exception_8h_1abed3148acaa207134261748c1eb175a7">exception</link> ex)</para>
</listitem>
            <listitem><para>const REFLECT_API char * <link linkend="_reflect__exception_8h_1a9c1a0c7cbd50a900ecb925402c8913e7">exception_label</link> (<link linkend="_reflect__exception_8h_1abed3148acaa207134261748c1eb175a7">exception</link> ex)</para>
</listitem>
            <listitem><para>REFLECT_API int <link linkend="_reflect__exception_8h_1a08a29a96f5adacf792e6fed986bd9672">exception_code</link> (<link linkend="_reflect__exception_8h_1abed3148acaa207134261748c1eb175a7">exception</link> ex)</para>
</listitem>
            <listitem><para>const REFLECT_API char * <link linkend="_reflect__exception_8h_1a9d38b99d2f5dcbf39ccacb37160db617">exception_stacktrace</link> (<link linkend="_reflect__exception_8h_1abed3148acaa207134261748c1eb175a7">exception</link> ex)</para>
</listitem>
            <listitem><para>REFLECT_API void <link linkend="_reflect__exception_8h_1a457c882270c27eacbadb1abcaf54f9ad">exception_destroy</link> (<link linkend="_reflect__exception_8h_1abed3148acaa207134261748c1eb175a7">exception</link> ex)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_reflect__exception_8h_1abed3148acaa207134261748c1eb175a7"/>    <section>
    <title>exception</title>
<indexterm><primary>exception</primary><secondary>reflect_exception.h</secondary></indexterm>
<indexterm><primary>reflect_exception.h</primary><secondary>exception</secondary></indexterm>
<para><computeroutput>typedef struct exception_type* <link linkend="_reflect__exception_8h_1abed3148acaa207134261748c1eb175a7">exception</link></computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_reflect__exception_8h_1a07cdd4a20290dcc70a0a20fd67ecc8f2"/>    <section>
    <title>exception_create()</title>
<indexterm><primary>exception_create</primary><secondary>reflect_exception.h</secondary></indexterm>
<indexterm><primary>reflect_exception.h</primary><secondary>exception_create</secondary></indexterm>
<para><computeroutput>REFLECT_API <link linkend="_reflect__exception_8h_1abed3148acaa207134261748c1eb175a7">exception</link> exception_create (const char * message, const char * label, int code, const char * stacktrace)</computeroutput></para>    </section><anchor xml:id="_reflect__exception_8h_1ab9d4f0dc5fcee6e79a44b4613db00e2c"/>    <section>
    <title>exception_message()</title>
<indexterm><primary>exception_message</primary><secondary>reflect_exception.h</secondary></indexterm>
<indexterm><primary>reflect_exception.h</primary><secondary>exception_message</secondary></indexterm>
<para><computeroutput>const REFLECT_API char* exception_message (<link linkend="_reflect__exception_8h_1abed3148acaa207134261748c1eb175a7">exception</link> ex)</computeroutput></para>    </section><anchor xml:id="_reflect__exception_8h_1a9c1a0c7cbd50a900ecb925402c8913e7"/>    <section>
    <title>exception_label()</title>
<indexterm><primary>exception_label</primary><secondary>reflect_exception.h</secondary></indexterm>
<indexterm><primary>reflect_exception.h</primary><secondary>exception_label</secondary></indexterm>
<para><computeroutput>const REFLECT_API char* exception_label (<link linkend="_reflect__exception_8h_1abed3148acaa207134261748c1eb175a7">exception</link> ex)</computeroutput></para>    </section><anchor xml:id="_reflect__exception_8h_1a08a29a96f5adacf792e6fed986bd9672"/>    <section>
    <title>exception_code()</title>
<indexterm><primary>exception_code</primary><secondary>reflect_exception.h</secondary></indexterm>
<indexterm><primary>reflect_exception.h</primary><secondary>exception_code</secondary></indexterm>
<para><computeroutput>REFLECT_API int exception_code (<link linkend="_reflect__exception_8h_1abed3148acaa207134261748c1eb175a7">exception</link> ex)</computeroutput></para>    </section><anchor xml:id="_reflect__exception_8h_1a9d38b99d2f5dcbf39ccacb37160db617"/>    <section>
    <title>exception_stacktrace()</title>
<indexterm><primary>exception_stacktrace</primary><secondary>reflect_exception.h</secondary></indexterm>
<indexterm><primary>reflect_exception.h</primary><secondary>exception_stacktrace</secondary></indexterm>
<para><computeroutput>const REFLECT_API char* exception_stacktrace (<link linkend="_reflect__exception_8h_1abed3148acaa207134261748c1eb175a7">exception</link> ex)</computeroutput></para>    </section><anchor xml:id="_reflect__exception_8h_1a457c882270c27eacbadb1abcaf54f9ad"/>    <section>
    <title>exception_destroy()</title>
<indexterm><primary>exception_destroy</primary><secondary>reflect_exception.h</secondary></indexterm>
<indexterm><primary>reflect_exception.h</primary><secondary>exception_destroy</secondary></indexterm>
<para><computeroutput>REFLECT_API void exception_destroy (<link linkend="_reflect__exception_8h_1abed3148acaa207134261748c1eb175a7">exception</link> ex)</computeroutput></para></section>
</section>
</section>
