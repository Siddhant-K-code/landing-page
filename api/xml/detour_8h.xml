<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="detour_8h" kind="file" language="C++">
    <compoundname>detour.h</compoundname>
    <includes local="no">detour/detour_api.h</includes>
    <includes local="no">memory/memory.h</includes>
    <includedby refid="detour__singleton_8h" local="no">detour_singleton.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>detour.h</label>
        <link refid="detour_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>detour/detour_api.h</label>
      </node>
      <node id="3">
        <label>memory/memory.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>detour.h</label>
        <link refid="detour_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>detour_singleton.h</label>
        <link refid="detour__singleton_8h"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="user-defined">
      <description><para>Create detour by</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Plugin will be used to detourize and detourize</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to detour on correct initialization, null otherwise </para>
</simplesect>
</para>
</description>
      <memberdef kind="variable" id="detour_8h_1a499d7044cff90872c46201c25f1d1636" prot="public" static="no" mutable="no">
        <type>DETOUR_API void(*)(void)</type>
        <definition>DETOUR_API void(*)(void) detour_trampoline(detour_handle handle)</definition>
        <argsstring>(detour_handle handle)</argsstring>
        <name>detour_trampoline</name>
        <briefdescription>
<para>Get trampoline of the detour. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the detour handle</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the trampoline function </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour.h" line="81" column="12" bodyfile="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="detour_8h_1aeb1aa814616739364742a8821a89fe42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DETOUR_API <ref refid="detour_8h_1a98b044d8fd6bb0343802eefe9ce75591" kindref="member">detour</ref></type>
        <definition>DETOUR_API detour detour_create</definition>
        <argsstring>(const char *name)</argsstring>
        <name>detour_create</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour.h" line="55" column="19" declfile="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour.h" declline="55" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="detour_8h_1ab98755191ec5000f8b546cf37669446b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const DETOUR_API char *</type>
        <definition>const DETOUR_API char* detour_name</definition>
        <argsstring>(detour d)</argsstring>
        <name>detour_name</name>
        <param>
          <type><ref refid="detour_8h_1a98b044d8fd6bb0343802eefe9ce75591" kindref="member">detour</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Get name of detour. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">d</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the detour</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Static const string with detour name </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour.h" line="68" column="23" declfile="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour.h" declline="68" declcolumn="23"/>
      </memberdef>
      <memberdef kind="function" id="detour_8h_1abd6884b0274d91b4d150d4a41d9ff435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DETOUR_API <ref refid="detour_8h_1a4e5a5235d50ce87e1b46d0ef72ea0f59" kindref="member">detour_handle</ref></type>
        <definition>DETOUR_API detour_handle detour_install</definition>
        <argsstring>(detour d, void(*target)(void), void(*hook)(void))</argsstring>
        <name>detour_install</name>
        <param>
          <type><ref refid="detour_8h_1a98b044d8fd6bb0343802eefe9ce75591" kindref="member">detour</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type>void(*)(void)</type>
          <declname>target</declname>
        </param>
        <param>
          <type>void(*)(void)</type>
          <declname>hook</declname>
        </param>
        <briefdescription>
<para>Install detour from @target to @hook. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">d</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the detour</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">target</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the function to be hooked</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hook</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the function will be called instead of @target</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the detour handle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour.h" line="100" column="26" declfile="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour.h" declline="100" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="detour_8h_1ae71c2cec478b01c0c159f3aaefe8176f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DETOUR_API int</type>
        <definition>DETOUR_API int detour_uninstall</definition>
        <argsstring>(detour d, detour_handle handle)</argsstring>
        <name>detour_uninstall</name>
        <param>
          <type><ref refid="detour_8h_1a98b044d8fd6bb0343802eefe9ce75591" kindref="member">detour</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="detour_8h_1a4e5a5235d50ce87e1b46d0ef72ea0f59" kindref="member">detour_handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Install detour from @target to @hook. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">d</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the detour</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the detour handle</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return zero if success, different from zero otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour.h" line="116" column="16" declfile="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour.h" declline="116" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="detour_8h_1a5a685867fbcf4276c4643162f60ba4be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DETOUR_API int</type>
        <definition>DETOUR_API int detour_clear</definition>
        <argsstring>(detour d)</argsstring>
        <name>detour_clear</name>
        <param>
          <type><ref refid="detour_8h_1a98b044d8fd6bb0343802eefe9ce75591" kindref="member">detour</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Destroy detour by handle @d. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">d</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the detour</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return zero on correct destruction, different from zero otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour.h" line="129" column="16" declfile="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour.h" declline="129" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="detour_8h_1a2620b95d56350cb422c32b33d20dc8b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DETOUR_API void</type>
        <definition>DETOUR_API void detour_destroy</definition>
        <argsstring>(void)</argsstring>
        <name>detour_destroy</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Destroy all detours. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour.h" line="136" column="17" declfile="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour.h" declline="136" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="detour_8h_1ae7a5f70dc469322ad7807fe4c1ae661d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const DETOUR_API char *</type>
        <definition>const DETOUR_API char* detour_print_info</definition>
        <argsstring>(void)</argsstring>
        <name>detour_print_info</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Provide the module information. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Static string containing module information </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour.h" line="146" column="23" declfile="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour.h" declline="146" declcolumn="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="detour_8h_1a98b044d8fd6bb0343802eefe9ce75591" prot="public" static="no">
        <type>struct detour_type *</type>
        <definition>typedef struct detour_type* detour</definition>
        <argsstring></argsstring>
        <name>detour</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour.h" line="30" column="26" bodyfile="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="detour_8h_1a4e5a5235d50ce87e1b46d0ef72ea0f59" prot="public" static="no">
        <type>struct detour_handle_type *</type>
        <definition>typedef struct detour_handle_type* detour_handle</definition>
        <argsstring></argsstring>
        <name>detour_handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour.h" line="32" column="33" bodyfile="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="detour_8h_1a7774df25f012aa74dd2eb720f3dda3da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DETOUR_API int</type>
        <definition>DETOUR_API int detour_initialize</definition>
        <argsstring>(void)</argsstring>
        <name>detour_initialize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize detour module. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Return zero correct initialization, distinct from zero otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour.h" line="42" column="16" declfile="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour.h" declline="42" declcolumn="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>Detour<sp/>Library<sp/>by<sp/>Parra<sp/>Studios</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2016<sp/>-<sp/>2021<sp/>Vicente<sp/>Eduardo<sp/>Ferrer<sp/>Garcia<sp/>&lt;vic798@gmail.com&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>A<sp/>cross-platform<sp/>library<sp/>providing<sp/>detours,<sp/>function<sp/>hooks<sp/>and<sp/>trampolines.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DETOUR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DETOUR_H<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--<sp/>Headers<sp/>--<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;detour/detour_api.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory/memory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--<sp/>Forward<sp/>Declarations<sp/>--<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">detour_type;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">detour_handle_type;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--<sp/>Type<sp/>Definitions<sp/>--<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="detour_8h_1a98b044d8fd6bb0343802eefe9ce75591" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">detour_type<sp/>*<ref refid="detour_8h_1a98b044d8fd6bb0343802eefe9ce75591" kindref="member">detour</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="detour_8h_1a4e5a5235d50ce87e1b46d0ef72ea0f59" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">detour_handle_type<sp/>*<ref refid="detour_8h_1a4e5a5235d50ce87e1b46d0ef72ea0f59" kindref="member">detour_handle</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="34"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="36"><highlight class="comment">*<sp/><sp/><sp/><sp/>Initialize<sp/>detour<sp/>module</highlight></codeline>
<codeline lineno="37"><highlight class="comment">*</highlight></codeline>
<codeline lineno="38"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="39"><highlight class="comment">*<sp/><sp/><sp/><sp/>Return<sp/>zero<sp/>correct<sp/>initialization,<sp/>distinct<sp/>from<sp/>zero<sp/>otherwise</highlight></codeline>
<codeline lineno="40"><highlight class="comment">*</highlight></codeline>
<codeline lineno="41"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">DETOUR_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="detour_8h_1a7774df25f012aa74dd2eb720f3dda3da" kindref="member">detour_initialize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="44"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="45"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="46"><highlight class="comment">*<sp/><sp/><sp/><sp/>Create<sp/>detour<sp/>by<sp/>@name</highlight></codeline>
<codeline lineno="47"><highlight class="comment">*</highlight></codeline>
<codeline lineno="48"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>name</highlight></codeline>
<codeline lineno="49"><highlight class="comment">*<sp/><sp/><sp/><sp/>Plugin<sp/>will<sp/>be<sp/>used<sp/>to<sp/>detourize<sp/>and<sp/>detourize</highlight></codeline>
<codeline lineno="50"><highlight class="comment">*</highlight></codeline>
<codeline lineno="51"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="52"><highlight class="comment">*<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>detour<sp/>on<sp/>correct<sp/>initialization,<sp/>null<sp/>otherwise</highlight></codeline>
<codeline lineno="53"><highlight class="comment">*</highlight></codeline>
<codeline lineno="54"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">DETOUR_API<sp/><ref refid="detour_8h_1a98b044d8fd6bb0343802eefe9ce75591" kindref="member">detour</ref><sp/><ref refid="detour_8h_1aeb1aa814616739364742a8821a89fe42" kindref="member">detour_create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="57"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="58"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="59"><highlight class="comment">*<sp/><sp/><sp/><sp/>Get<sp/>name<sp/>of<sp/>detour</highlight></codeline>
<codeline lineno="60"><highlight class="comment">*</highlight></codeline>
<codeline lineno="61"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>d</highlight></codeline>
<codeline lineno="62"><highlight class="comment">*<sp/><sp/><sp/><sp/>Reference<sp/>to<sp/>the<sp/>detour</highlight></codeline>
<codeline lineno="63"><highlight class="comment">*</highlight></codeline>
<codeline lineno="64"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="65"><highlight class="comment">*<sp/><sp/><sp/><sp/>Static<sp/>const<sp/>string<sp/>with<sp/>detour<sp/>name</highlight></codeline>
<codeline lineno="66"><highlight class="comment">*</highlight></codeline>
<codeline lineno="67"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">DETOUR_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="detour_8h_1ab98755191ec5000f8b546cf37669446b" kindref="member">detour_name</ref>(<ref refid="detour_8h_1a98b044d8fd6bb0343802eefe9ce75591" kindref="member">detour</ref><sp/>d);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="70"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="71"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="72"><highlight class="comment">*<sp/><sp/><sp/><sp/>Get<sp/>trampoline<sp/>of<sp/>the<sp/>detour</highlight></codeline>
<codeline lineno="73"><highlight class="comment">*</highlight></codeline>
<codeline lineno="74"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>handle</highlight></codeline>
<codeline lineno="75"><highlight class="comment">*<sp/><sp/><sp/><sp/>Reference<sp/>to<sp/>the<sp/>detour<sp/>handle</highlight></codeline>
<codeline lineno="76"><highlight class="comment">*</highlight></codeline>
<codeline lineno="77"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="78"><highlight class="comment">*<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>trampoline<sp/>function</highlight></codeline>
<codeline lineno="79"><highlight class="comment">*</highlight></codeline>
<codeline lineno="80"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="detour_8h_1a499d7044cff90872c46201c25f1d1636" refkind="member"><highlight class="normal">DETOUR_API<sp/>void<sp/>(*<ref refid="detour_8h_1a499d7044cff90872c46201c25f1d1636" kindref="member">detour_trampoline</ref>(<ref refid="detour_8h_1a4e5a5235d50ce87e1b46d0ef72ea0f59" kindref="member">detour_handle</ref><sp/>handle))(void);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="83"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="84"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="85"><highlight class="comment">*<sp/><sp/><sp/><sp/>Install<sp/>detour<sp/>from<sp/>@target<sp/>to<sp/>@hook</highlight></codeline>
<codeline lineno="86"><highlight class="comment">*</highlight></codeline>
<codeline lineno="87"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>d</highlight></codeline>
<codeline lineno="88"><highlight class="comment">*<sp/><sp/><sp/><sp/>Reference<sp/>to<sp/>the<sp/>detour</highlight></codeline>
<codeline lineno="89"><highlight class="comment">*</highlight></codeline>
<codeline lineno="90"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>target</highlight></codeline>
<codeline lineno="91"><highlight class="comment">*<sp/><sp/><sp/><sp/>Reference<sp/>to<sp/>the<sp/>function<sp/>to<sp/>be<sp/>hooked</highlight></codeline>
<codeline lineno="92"><highlight class="comment">*</highlight></codeline>
<codeline lineno="93"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>hook</highlight></codeline>
<codeline lineno="94"><highlight class="comment">*<sp/><sp/><sp/><sp/>Reference<sp/>to<sp/>the<sp/>function<sp/>will<sp/>be<sp/>called<sp/>instead<sp/>of<sp/>@target</highlight></codeline>
<codeline lineno="95"><highlight class="comment">*</highlight></codeline>
<codeline lineno="96"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="97"><highlight class="comment">*<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>detour<sp/>handle</highlight></codeline>
<codeline lineno="98"><highlight class="comment">*</highlight></codeline>
<codeline lineno="99"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">DETOUR_API<sp/><ref refid="detour_8h_1a4e5a5235d50ce87e1b46d0ef72ea0f59" kindref="member">detour_handle</ref><sp/><ref refid="detour_8h_1abd6884b0274d91b4d150d4a41d9ff435" kindref="member">detour_install</ref>(<ref refid="detour_8h_1a98b044d8fd6bb0343802eefe9ce75591" kindref="member">detour</ref><sp/>d,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*target)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*hook)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="102"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="103"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="104"><highlight class="comment">*<sp/><sp/><sp/><sp/>Install<sp/>detour<sp/>from<sp/>@target<sp/>to<sp/>@hook</highlight></codeline>
<codeline lineno="105"><highlight class="comment">*</highlight></codeline>
<codeline lineno="106"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>d</highlight></codeline>
<codeline lineno="107"><highlight class="comment">*<sp/><sp/><sp/><sp/>Reference<sp/>to<sp/>the<sp/>detour</highlight></codeline>
<codeline lineno="108"><highlight class="comment">*</highlight></codeline>
<codeline lineno="109"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>handle</highlight></codeline>
<codeline lineno="110"><highlight class="comment">*<sp/><sp/><sp/><sp/>Reference<sp/>to<sp/>the<sp/>detour<sp/>handle</highlight></codeline>
<codeline lineno="111"><highlight class="comment">*</highlight></codeline>
<codeline lineno="112"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="113"><highlight class="comment">*<sp/><sp/><sp/><sp/>Return<sp/>zero<sp/>if<sp/>success,<sp/>different<sp/>from<sp/>zero<sp/>otherwise</highlight></codeline>
<codeline lineno="114"><highlight class="comment">*</highlight></codeline>
<codeline lineno="115"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">DETOUR_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="detour_8h_1ae71c2cec478b01c0c159f3aaefe8176f" kindref="member">detour_uninstall</ref>(<ref refid="detour_8h_1a98b044d8fd6bb0343802eefe9ce75591" kindref="member">detour</ref><sp/>d,<sp/><ref refid="detour_8h_1a4e5a5235d50ce87e1b46d0ef72ea0f59" kindref="member">detour_handle</ref><sp/>handle);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="118"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="119"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="120"><highlight class="comment">*<sp/><sp/><sp/><sp/>Destroy<sp/>detour<sp/>by<sp/>handle<sp/>@d</highlight></codeline>
<codeline lineno="121"><highlight class="comment">*</highlight></codeline>
<codeline lineno="122"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>d</highlight></codeline>
<codeline lineno="123"><highlight class="comment">*<sp/><sp/><sp/><sp/>Reference<sp/>to<sp/>the<sp/>detour</highlight></codeline>
<codeline lineno="124"><highlight class="comment">*</highlight></codeline>
<codeline lineno="125"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="126"><highlight class="comment">*<sp/><sp/><sp/><sp/>Return<sp/>zero<sp/>on<sp/>correct<sp/>destruction,<sp/>different<sp/>from<sp/>zero<sp/>otherwise</highlight></codeline>
<codeline lineno="127"><highlight class="comment">*</highlight></codeline>
<codeline lineno="128"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">DETOUR_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="detour_8h_1a5a685867fbcf4276c4643162f60ba4be" kindref="member">detour_clear</ref>(<ref refid="detour_8h_1a98b044d8fd6bb0343802eefe9ce75591" kindref="member">detour</ref><sp/>d);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="131"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="132"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="133"><highlight class="comment">*<sp/><sp/><sp/><sp/>Destroy<sp/>all<sp/>detours</highlight></codeline>
<codeline lineno="134"><highlight class="comment">*</highlight></codeline>
<codeline lineno="135"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">DETOUR_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="detour_8h_1a2620b95d56350cb422c32b33d20dc8b7" kindref="member">detour_destroy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="138"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="139"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="140"><highlight class="comment">*<sp/><sp/><sp/><sp/>Provide<sp/>the<sp/>module<sp/>information</highlight></codeline>
<codeline lineno="141"><highlight class="comment">*</highlight></codeline>
<codeline lineno="142"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="143"><highlight class="comment">*<sp/><sp/><sp/><sp/>Static<sp/>string<sp/>containing<sp/>module<sp/>information</highlight></codeline>
<codeline lineno="144"><highlight class="comment">*</highlight></codeline>
<codeline lineno="145"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal">DETOUR_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="detour_8h_1ae7a5f70dc469322ad7807fe4c1ae661d" kindref="member">detour_print_info</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DETOUR_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour.h"/>
  </compounddef>
</doxygen>
