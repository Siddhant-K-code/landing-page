<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="detour__impl_8h" kind="file" language="C++">
    <compoundname>detour_impl.h</compoundname>
    <includes local="no">detour/detour_api.h</includes>
    <includes refid="detour__impl__handle_8h" local="no">detour/detour_impl_handle.h</includes>
    <incdepgraph>
      <node id="1">
        <label>detour_impl.h</label>
        <link refid="detour__impl_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>detour/detour_api.h</label>
      </node>
      <node id="3">
        <label>detour/detour_impl_handle.h</label>
        <link refid="detour__impl__handle_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27" prot="public" static="no">
        <type>struct detour_impl_type *</type>
        <definition>typedef struct detour_impl_type* detour_impl</definition>
        <argsstring></argsstring>
        <name>detour_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour_impl.h" line="40" column="31" bodyfile="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour_impl.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="detour__impl_8h_1afa470a63d48af285c6f5fd14abab95b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DETOUR_API <ref refid="detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27" kindref="member">detour_impl</ref></type>
        <definition>DETOUR_API detour_impl detour_impl_create</definition>
        <argsstring>(void)</argsstring>
        <name>detour_impl_create</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create detour implementation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns pointer to detour implementation correct creation, null otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour_impl.h" line="52" column="24" declfile="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour_impl.h" declline="52" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="detour__impl_8h_1a8ef406f31f59a7a1a07c82499a88a6cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DETOUR_API int</type>
        <definition>DETOUR_API int detour_impl_load</definition>
        <argsstring>(detour_impl impl, const char *path, const char *name)</argsstring>
        <name>detour_impl_load</name>
        <param>
          <type><ref refid="detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27" kindref="member">detour_impl</ref></type>
          <declname>impl</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Load detour implementation @impl. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">impl</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the detour implementation to be loaded</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path where dependency is located</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Dependency name to be injected</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns zero on correct loading, distinct from zero otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour_impl.h" line="71" column="16" declfile="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour_impl.h" declline="71" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="detour__impl_8h_1aec39d9bce79bd6cb2fb3dfa092473401" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DETOUR_API <ref refid="detour__impl__handle_8h_1af561155897833a2ccb83169ed78de0a3" kindref="member">detour_impl_handle</ref></type>
        <definition>DETOUR_API detour_impl_handle detour_impl_install</definition>
        <argsstring>(detour_impl impl, void(**target)(void), void(*hook)(void))</argsstring>
        <name>detour_impl_install</name>
        <param>
          <type><ref refid="detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27" kindref="member">detour_impl</ref></type>
          <declname>impl</declname>
        </param>
        <param>
          <type>void(**)(void)</type>
          <declname>target</declname>
        </param>
        <param>
          <type>void(*)(void)</type>
          <declname>hook</declname>
        </param>
        <briefdescription>
<para>Install detour implementation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">impl</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the detour hook implementation</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">target</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the function to be intercepted</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hook</parametername>
</parameternamelist>
<parameterdescription>
<para>Function will be called instead of target</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return pointer to the detour handle on success, null otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour_impl.h" line="90" column="31" declfile="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour_impl.h" declline="90" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="detour__impl_8h_1a2d7f976fc35ddb443ff9e3e34ebf81ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DETOUR_API int</type>
        <definition>DETOUR_API int detour_impl_uninstall</definition>
        <argsstring>(detour_impl impl, detour_impl_handle handle)</argsstring>
        <name>detour_impl_uninstall</name>
        <param>
          <type><ref refid="detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27" kindref="member">detour_impl</ref></type>
          <declname>impl</declname>
        </param>
        <param>
          <type><ref refid="detour__impl__handle_8h_1af561155897833a2ccb83169ed78de0a3" kindref="member">detour_impl_handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Uninstall detour implementation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">impl</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the detour hook implementation</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the detour hook handle</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return zero on success, different from zero otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour_impl.h" line="106" column="16" declfile="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour_impl.h" declline="106" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="detour__impl_8h_1ae3a54c63c40319f5609b0d5fa4168dba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DETOUR_API int</type>
        <definition>DETOUR_API int detour_impl_unload</definition>
        <argsstring>(detour_impl impl)</argsstring>
        <name>detour_impl_unload</name>
        <param>
          <type><ref refid="detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27" kindref="member">detour_impl</ref></type>
          <declname>impl</declname>
        </param>
        <briefdescription>
<para>Unload detour implementation @impl. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">impl</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the detour implementation to be unloaded</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns zero on correct unloading, distinct from zero otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour_impl.h" line="119" column="16" declfile="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour_impl.h" declline="119" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="detour__impl_8h_1aa2fa10d7be12a9dbc32353c16593f442" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DETOUR_API int</type>
        <definition>DETOUR_API int detour_impl_destroy</definition>
        <argsstring>(detour_impl impl)</argsstring>
        <name>detour_impl_destroy</name>
        <param>
          <type><ref refid="detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27" kindref="member">detour_impl</ref></type>
          <declname>impl</declname>
        </param>
        <briefdescription>
<para>Destroy detour implementation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">impl</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the detour implementation to be destroyed</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns zero on correct destruction, distinct from zero otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour_impl.h" line="132" column="16" declfile="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour_impl.h" declline="132" declcolumn="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>Detour<sp/>Library<sp/>by<sp/>Parra<sp/>Studios</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>A<sp/>cross-platform<sp/>library<sp/>providing<sp/>detours,<sp/>function<sp/>hooks<sp/>and<sp/>trampolines.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2016<sp/>-<sp/>2021<sp/>Vicente<sp/>Eduardo<sp/>Ferrer<sp/>Garcia<sp/>&lt;vic798@gmail.com&gt;</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DETOUR_IMPL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DETOUR_IMPL_H<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--<sp/>Headers<sp/>--<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;detour/detour_api.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="detour__impl__handle_8h" kindref="compound">detour/detour_impl_handle.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--<sp/>Forward<sp/>Declarations<sp/>--<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">detour_impl_type;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--<sp/>Type<sp/>Definitions<sp/>--<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">detour_impl_type<sp/>*<ref refid="detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27" kindref="member">detour_impl</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--<sp/>Methods<sp/>--<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="44"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="45"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="46"><highlight class="comment">*<sp/><sp/><sp/><sp/>Create<sp/>detour<sp/>implementation</highlight></codeline>
<codeline lineno="47"><highlight class="comment">*</highlight></codeline>
<codeline lineno="48"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="49"><highlight class="comment">*<sp/><sp/><sp/><sp/>Returns<sp/>pointer<sp/>to<sp/>detour<sp/>implementation<sp/>correct<sp/>creation,<sp/>null<sp/>otherwise</highlight></codeline>
<codeline lineno="50"><highlight class="comment">*</highlight></codeline>
<codeline lineno="51"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">DETOUR_API<sp/><ref refid="detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27" kindref="member">detour_impl</ref><sp/><ref refid="detour__impl_8h_1afa470a63d48af285c6f5fd14abab95b9" kindref="member">detour_impl_create</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="54"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="55"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="56"><highlight class="comment">*<sp/><sp/><sp/><sp/>Load<sp/>detour<sp/>implementation<sp/>@impl</highlight></codeline>
<codeline lineno="57"><highlight class="comment">*</highlight></codeline>
<codeline lineno="58"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>impl</highlight></codeline>
<codeline lineno="59"><highlight class="comment">*<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>detour<sp/>implementation<sp/>to<sp/>be<sp/>loaded</highlight></codeline>
<codeline lineno="60"><highlight class="comment">*</highlight></codeline>
<codeline lineno="61"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>path</highlight></codeline>
<codeline lineno="62"><highlight class="comment">*<sp/><sp/><sp/><sp/>Path<sp/>where<sp/>dependency<sp/>is<sp/>located</highlight></codeline>
<codeline lineno="63"><highlight class="comment">*</highlight></codeline>
<codeline lineno="64"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>name</highlight></codeline>
<codeline lineno="65"><highlight class="comment">*<sp/><sp/><sp/><sp/>Dependency<sp/>name<sp/>to<sp/>be<sp/>injected</highlight></codeline>
<codeline lineno="66"><highlight class="comment">*</highlight></codeline>
<codeline lineno="67"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="68"><highlight class="comment">*<sp/><sp/><sp/><sp/>Returns<sp/>zero<sp/>on<sp/>correct<sp/>loading,<sp/>distinct<sp/>from<sp/>zero<sp/>otherwise</highlight></codeline>
<codeline lineno="69"><highlight class="comment">*</highlight></codeline>
<codeline lineno="70"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">DETOUR_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="detour__impl_8h_1a8ef406f31f59a7a1a07c82499a88a6cb" kindref="member">detour_impl_load</ref>(<ref refid="detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27" kindref="member">detour_impl</ref><sp/>impl,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="73"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="74"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="75"><highlight class="comment">*<sp/><sp/><sp/><sp/>Install<sp/>detour<sp/>implementation</highlight></codeline>
<codeline lineno="76"><highlight class="comment">*</highlight></codeline>
<codeline lineno="77"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>impl</highlight></codeline>
<codeline lineno="78"><highlight class="comment">*<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>detour<sp/>hook<sp/>implementation</highlight></codeline>
<codeline lineno="79"><highlight class="comment">*</highlight></codeline>
<codeline lineno="80"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>target</highlight></codeline>
<codeline lineno="81"><highlight class="comment">*<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>function<sp/>to<sp/>be<sp/>intercepted</highlight></codeline>
<codeline lineno="82"><highlight class="comment">*</highlight></codeline>
<codeline lineno="83"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>hook</highlight></codeline>
<codeline lineno="84"><highlight class="comment">*<sp/><sp/><sp/><sp/>Function<sp/>will<sp/>be<sp/>called<sp/>instead<sp/>of<sp/>target</highlight></codeline>
<codeline lineno="85"><highlight class="comment">*</highlight></codeline>
<codeline lineno="86"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="87"><highlight class="comment">*<sp/><sp/><sp/><sp/>Return<sp/>pointer<sp/>to<sp/>the<sp/>detour<sp/>handle<sp/>on<sp/>success,<sp/>null<sp/>otherwise</highlight></codeline>
<codeline lineno="88"><highlight class="comment">*</highlight></codeline>
<codeline lineno="89"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">DETOUR_API<sp/><ref refid="detour__impl__handle_8h_1af561155897833a2ccb83169ed78de0a3" kindref="member">detour_impl_handle</ref><sp/><ref refid="detour__impl_8h_1aec39d9bce79bd6cb2fb3dfa092473401" kindref="member">detour_impl_install</ref>(<ref refid="detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27" kindref="member">detour_impl</ref><sp/>impl,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(**target)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*hook)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="92"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="93"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="94"><highlight class="comment">*<sp/><sp/><sp/><sp/>Uninstall<sp/>detour<sp/>implementation</highlight></codeline>
<codeline lineno="95"><highlight class="comment">*</highlight></codeline>
<codeline lineno="96"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>impl</highlight></codeline>
<codeline lineno="97"><highlight class="comment">*<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>detour<sp/>hook<sp/>implementation</highlight></codeline>
<codeline lineno="98"><highlight class="comment">*</highlight></codeline>
<codeline lineno="99"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>handle</highlight></codeline>
<codeline lineno="100"><highlight class="comment">*<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>detour<sp/>hook<sp/>handle</highlight></codeline>
<codeline lineno="101"><highlight class="comment">*</highlight></codeline>
<codeline lineno="102"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="103"><highlight class="comment">*<sp/><sp/><sp/><sp/>Return<sp/>zero<sp/>on<sp/>success,<sp/>different<sp/>from<sp/>zero<sp/>otherwise</highlight></codeline>
<codeline lineno="104"><highlight class="comment">*</highlight></codeline>
<codeline lineno="105"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">DETOUR_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="detour__impl_8h_1a2d7f976fc35ddb443ff9e3e34ebf81ef" kindref="member">detour_impl_uninstall</ref>(<ref refid="detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27" kindref="member">detour_impl</ref><sp/>impl,<sp/><ref refid="detour__impl__handle_8h_1af561155897833a2ccb83169ed78de0a3" kindref="member">detour_impl_handle</ref><sp/>handle);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="108"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="109"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="110"><highlight class="comment">*<sp/><sp/><sp/><sp/>Unload<sp/>detour<sp/>implementation<sp/>@impl</highlight></codeline>
<codeline lineno="111"><highlight class="comment">*</highlight></codeline>
<codeline lineno="112"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>impl</highlight></codeline>
<codeline lineno="113"><highlight class="comment">*<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>detour<sp/>implementation<sp/>to<sp/>be<sp/>unloaded</highlight></codeline>
<codeline lineno="114"><highlight class="comment">*</highlight></codeline>
<codeline lineno="115"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="116"><highlight class="comment">*<sp/><sp/><sp/><sp/>Returns<sp/>zero<sp/>on<sp/>correct<sp/>unloading,<sp/>distinct<sp/>from<sp/>zero<sp/>otherwise</highlight></codeline>
<codeline lineno="117"><highlight class="comment">*</highlight></codeline>
<codeline lineno="118"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">DETOUR_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="detour__impl_8h_1ae3a54c63c40319f5609b0d5fa4168dba" kindref="member">detour_impl_unload</ref>(<ref refid="detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27" kindref="member">detour_impl</ref><sp/>impl);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="121"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="122"><highlight class="comment">*<sp/><sp/>@brief</highlight></codeline>
<codeline lineno="123"><highlight class="comment">*<sp/><sp/><sp/><sp/>Destroy<sp/>detour<sp/>implementation</highlight></codeline>
<codeline lineno="124"><highlight class="comment">*</highlight></codeline>
<codeline lineno="125"><highlight class="comment">*<sp/><sp/>@param[in]<sp/>impl</highlight></codeline>
<codeline lineno="126"><highlight class="comment">*<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>detour<sp/>implementation<sp/>to<sp/>be<sp/>destroyed</highlight></codeline>
<codeline lineno="127"><highlight class="comment">*</highlight></codeline>
<codeline lineno="128"><highlight class="comment">*<sp/><sp/>@return</highlight></codeline>
<codeline lineno="129"><highlight class="comment">*<sp/><sp/><sp/><sp/>Returns<sp/>zero<sp/>on<sp/>correct<sp/>destruction,<sp/>distinct<sp/>from<sp/>zero<sp/>otherwise</highlight></codeline>
<codeline lineno="130"><highlight class="comment">*</highlight></codeline>
<codeline lineno="131"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">DETOUR_API<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="detour__impl_8h_1aa2fa10d7be12a9dbc32353c16593f442" kindref="member">detour_impl_destroy</ref>(<ref refid="detour__impl_8h_1afe7980c03ad3af986914e70c84b1fc27" kindref="member">detour_impl</ref><sp/>impl);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DETOUR_IMPL_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/landing-page/landing-page/core/source/detour/include/detour/detour_impl.h"/>
  </compounddef>
</doxygen>
